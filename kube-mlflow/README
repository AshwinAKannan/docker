1. Generate Kubernetes Manifests. This will produce a set of `.yaml` files in "test" directory
`kompose convert -o test/`


2. Modify spec in `mlflow-service.yaml `

"k8s-manifests" is provided for reference

By default, Kubernetes Services are of type ClusterIP, which are only accessible within the Kubernetes cluster.
To access the service externally (like via localhost), change the service type to NodePort or LoadBalancer. For local development, NodePort is typically used.

```
spec:
    type: NodePort
    ports:
        - name: "5000"
        port: 5000
        targetPort: 5000
        nodePort: 30000 
```


3. Apply Generated Kubernetes Manifests
`kubectl apply -f test`


4. Access MLFlow UI at localhost:30000


NOTE: ashwinakannan/mlflow:1.0 is the mlflow image pushed to registry

from inside mlflow dir,

`docker build -t ashwinakannan/mlflow:1.0 .`
`docker push ashwinakannan/mlflow:1.0`

Other cmds

Check Pod Status - `kubectl get pods`

Scale Down Deployments:
`kubectl scale deployment <deployment-name> --replicas=0`
`kubectl scale --all deployments --replicas=0`

